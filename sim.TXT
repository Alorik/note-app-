"use client";

import { useState } from "react";
import { FileText, Plus, Eye } from "lucide-react";

export default function CreateNotePage() {
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!title.trim() || !content.trim()) {
      alert("Please fill in both title and content!");
      return;
    }
    
    console.log("Note Created:", { title, content });
    alert(`Note created successfully!\nTitle: ${title}\nContent: ${content}`);
    
    // Reset form after successful creation
    setTitle("");
    setContent("");
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center mb-4">
            <div className="bg-indigo-600 p-3 rounded-full">
              <FileText className="w-8 h-8 text-white" />
            </div>
          </div>
          <h1 className="text-4xl font-bold text-gray-800 mb-2">Create New Note</h1>
          <p className="text-gray-600">Capture your thoughts and ideas</p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8">
          {/* Form Section */}
          <div className="bg-white rounded-2xl shadow-xl p-8">
            <form onSubmit={handleSubmit} className="space-y-6">
              {/* Title Input */}
              <div>
                <label htmlFor="title" className="block text-sm font-semibold text-gray-700 mb-2">
                  Note Title
                </label>
                <input 
                  id="title"
                  type="text"
                  placeholder="Enter your note title..."
                  value={title}
                  onChange={(e) => setTitle(e.target.value)}
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-indigo-500 focus:outline-none transition-colors duration-200 text-gray-800 placeholder-gray-400"
                />
              </div>

              {/* Content Textarea */}
              <div>
                <label htmlFor="content" className="block text-sm font-semibold text-gray-700 mb-2">
                  Content
                </label>
                <textarea
                  id="content"
                  placeholder="Write your note content here..."
                  value={content}
                  onChange={(e) => setContent(e.target.value)}
                  rows={8}
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-indigo-500 focus:outline-none transition-colors duration-200 text-gray-800 placeholder-gray-400 resize-y min-h-[200px]"
                />
              </div>

              {/* Submit Button */}
              <button 
                type="submit"
                disabled={!title.trim() || !content.trim()}
                className="w-full bg-indigo-600 hover:bg-indigo-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-semibold py-3 px-6 rounded-xl transition-all duration-200 flex items-center justify-center gap-2 shadow-lg hover:shadow-xl"
              >
                <Plus className="w-5 h-5" />
                Create Note
              </button>
            </form>
          </div>

          {/* Preview Section */}
          <div className="bg-white rounded-2xl shadow-xl p-8">
            <div className="flex items-center gap-2 mb-6">
              <Eye className="w-5 h-5 text-indigo-600" />
              <h2 className="text-xl font-semibold text-gray-800">Live Preview</h2>
            </div>
            
            {title || content ? (
              <div className="space-y-4">
                {/* Preview Title */}
                {title && (
                  <div>
                    <h3 className="text-sm font-medium text-gray-500 uppercase tracking-wide mb-1">Title</h3>
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-xl font-semibold text-gray-800">{title}</h4>
                    </div>
                  </div>
                )}
                
                {/* Preview Content */}
                {content && (
                  <div>
                    <h3 className="text-sm font-medium text-gray-500 uppercase tracking-wide mb-1">Content</h3>
                    <div className="bg-gray-50 rounded-lg p-4 max-h-[300px] overflow-y-auto">
                      <p className="text-gray-700 whitespace-pre-wrap leading-relaxed">{content}</p>
                    </div>
                  </div>
                )}
                
                {/* Character Count */}
                <div className="flex justify-between text-sm text-gray-500 pt-2 border-t border-gray-200">
                  <span>Title: {title.length} characters</span>
                  <span>Content: {content.length} characters</span>
                </div>
              </div>
            ) : (
              <div className="text-center py-12">
                <FileText className="w-16 h-16 text-gray-300 mx-auto mb-4" />
                <p className="text-gray-500 text-lg">Start typing to see your note preview</p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}